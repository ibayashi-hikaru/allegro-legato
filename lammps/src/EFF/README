This package contains a LAMMPS implementation of the electron Force
Field (eFF) currently under development at Caltech, as described in
A. Jaramillo-Botero, J. Su, Q. An, and W.A. Goddard III, JCC,
2010. The eFF potential was first introduced by Su and Goddard, in
2007.

eFF can be viewed as an approximation to QM wave packet dynamics and
Fermionic molecular dynamics, combining the ability of electronic
structure methods to describe atomic structure, bonding, and chemistry
in materials, and of plasma methods to describe nonequilibrium
dynamics of large systems with a large number of highly excited
electrons. We classify it as a mixed QM-classical approach rather than
a conventional force field method, which introduces QM-based terms (a
spin-dependent repulsion term to account for the Pauli exclusion
principle and the electron wavefunction kinetic energy associated with
the Heisenberg principle) that reduce, along with classical
electrostatic terms between nuclei and electrons, to the sum of a set
of effective pairwise potentials.  This makes eFF uniquely suited to
simulate materials over a wide range of temperatures and pressures
where electronically excited and ionized states of matter can occur
and coexist.

The necessary customizations to the LAMMPS core are in place to
enable the correct handling of explicit electron properties during
minimization and dynamics.

See the doc page for the pair_style eff/cut command to get started.

There are example scripts for using this package in
examples/PACKAGES/eff.

There are auxiliary tools for using this package in tools/eff.

The person who created this package is Andres Jaramillo-Botero at
CalTech (ajaramil at wag.caltech.edu).  Contact him directly if you
have questions.

-------------------------

AUTHOR INFORMATION:

Andres Jaramillo-Botero
California Institute of Technology (Caltech)
Chemistry and Chemical Engineering, 139-74
1200 E. California Blvd., Pasadena, CA 91125
Phone: (626) 395-3591
e-mail: ajaramil@wag.caltech.edu

Co-Authors:
Julius Su (jsu@wag.caltech.edu)
William A. Goddard III (wag@wag.caltech.edu)

ACKNOWLEDGMENTS:

Thanks to Steve Plimpton and Aidan Thompson for their input on the
LAMMPS architecture and for their help in customizing some of the
required LAMMPS core modules.

Version 01/2010: Special thanks to:
- Hai Xiao (Caltech) for reviewing the fixed-core implementation and
  providing useful insights to improve it, and for his work on the effective core pseudopotential.
- Vaclav Cvicek (Caltech) for thoroughly revising the units, for finding a bug in the
  fix_langevin_eff radial scaling factors, and for suggesting changes to clean-up the code.
- Patrick Theofanis (Caltech) for providing an optimized set of parameters for the Si ECP
  (default) and for providing basic cases.
- Qi An (Caltech) for providing feedback on usage, application cases, and testing.

VERSION NOTES:

01/2010: Added support for fixed-core and effective core
pseudopotentials [ECP] (useful for C, Al, Si, O and other elements).
Cleaned up the code to make it easier to maintain, revised support for
real units, upgraded post-processing and visualization tools, added
support for "compute pair eff" to allow thermo prints with the
different eFF energy components (eke, epauli, ecoul and errestrain),
fixed radial scaling factors in the eff langevin thermostat.

12/2011: Added support for "zero" option in fix langevin/eff (see doc), and
adjusted fix_langevin_eff.cpp to correctly thermostat between nuclear and electronic dof
(required additional scaling of friction term in the Langevin equations of motion).
Radial electron mass now scales as a function of system dimension.

Bug fixes:
(10-2011): Thanks to Christian Chenard-Lemire (U Montreal) for reporting a bug in the
fixed pair_eff_cut.cpp fixedcore-pseudocore interactions (an incorrect index and a missing
elec-core call to account for the 2 electrons from the fixed core.)
(12-2011): Corrected undefined natom variable in fix_langevin_eff (recent changes in
main fix_langevin class caused compilation error in user-eff).
Corrected thermostat in fix langevin/eff as described in version 12/2011.


